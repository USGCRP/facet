#!/bin/sh
# ----------------------------------------------------------------------------
#  Copyright 2001-2006 The Apache Software Foundation.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------
#
#   Copyright (c) 2001-2006 The Apache Software Foundation.  All rights
#   reserved.


# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

PRGDIR=`dirname "$PRG"`
BASEDIR=`cd "$PRGDIR/.." >/dev/null; pwd`



# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
           fi
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly." 1>&2
  echo "  We cannot execute $JAVACMD" 1>&2
  #### no exit ### Luc
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/repo
fi

CLASSPATH=$CLASSPATH_PREFIX:"$BASEDIR"/etc:"$REPO"/org/openprovenance/prov/prov-xml/0.6.1/prov-xml-0.6.1.jar:"$REPO"/org/openprovenance/prov/prov-model/0.6.1/prov-model-0.6.1.jar:"$REPO"/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:"$REPO"/javax/xml/bind/jaxb-api/2.2.4/jaxb-api-2.2.4.jar:"$REPO"/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:"$REPO"/javax/activation/activation/1.1/activation-1.1.jar:"$REPO"/com/sun/xml/bind/jaxb-impl/2.2.6/jaxb-impl-2.2.6.jar:"$REPO"/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:"$REPO"/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:"$REPO"/org/openprovenance/prov/prov-rdf/0.6.1/prov-rdf-0.6.1.jar:"$REPO"/org/openrdf/sesame/sesame-runtime/2.6.10/sesame-runtime-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-model/2.6.10/sesame-model-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-query/2.6.10/sesame-query-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-queryalgebra-model/2.6.10/sesame-queryalgebra-model-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-queryparser-api/2.6.10/sesame-queryparser-api-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-queryparser-serql/2.6.10/sesame-queryparser-serql-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-queryparser-sparql/2.6.10/sesame-queryparser-sparql-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-queryresultio-api/2.6.10/sesame-queryresultio-api-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-queryresultio-binary/2.6.10/sesame-queryresultio-binary-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-queryresultio-sparqljson/2.6.10/sesame-queryresultio-sparqljson-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-queryresultio-sparqlxml/2.6.10/sesame-queryresultio-sparqlxml-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-queryresultio-text/2.6.10/sesame-queryresultio-text-2.6.10.jar:"$REPO"/net/sf/opencsv/opencsv/2.0/opencsv-2.0.jar:"$REPO"/org/openrdf/sesame/sesame-repository-api/2.6.10/sesame-repository-api-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-repository-manager/2.6.10/sesame-repository-manager-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-repository-event/2.6.10/sesame-repository-event-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-repository-http/2.6.10/sesame-repository-http-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-repository-sail/2.6.10/sesame-repository-sail-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-repository-dataset/2.6.10/sesame-repository-dataset-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-repository-contextaware/2.6.10/sesame-repository-contextaware-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-http-protocol/2.6.10/sesame-http-protocol-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-http-client/2.6.10/sesame-http-client-2.6.10.jar:"$REPO"/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:"$REPO"/org/openrdf/sesame/sesame-rio-api/2.6.10/sesame-rio-api-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-rio-binary/2.6.10/sesame-rio-binary-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-rio-ntriples/2.6.10/sesame-rio-ntriples-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-rio-trix/2.6.10/sesame-rio-trix-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-rio-turtle/2.6.10/sesame-rio-turtle-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-sail-api/2.6.10/sesame-sail-api-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-sail-inferencer/2.6.10/sesame-sail-inferencer-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-sail-memory/2.6.10/sesame-sail-memory-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-queryalgebra-evaluation/2.6.10/sesame-queryalgebra-evaluation-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-repository-sparql/2.6.10/sesame-repository-sparql-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-sail-nativerdf/2.6.10/sesame-sail-nativerdf-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-sail-rdbms/2.6.10/sesame-sail-rdbms-2.6.10.jar:"$REPO"/commons-dbcp/commons-dbcp/1.3/commons-dbcp-1.3.jar:"$REPO"/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar:"$REPO"/org/slf4j/slf4j-api/1.6.1/slf4j-api-1.6.1.jar:"$REPO"/org/openrdf/sesame/sesame-rio-n3/2.6.10/sesame-rio-n3-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-rio-rdfxml/2.6.10/sesame-rio-rdfxml-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-util/2.6.10/sesame-util-2.6.10.jar:"$REPO"/org/openrdf/sesame/sesame-rio-trig/2.6.10/sesame-rio-trig-2.6.10.jar:"$REPO"/org/openprovenance/prov/prov-n/0.6.1/prov-n-0.6.1.jar:"$REPO"/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:"$REPO"/antlr/antlr/2.7.7/antlr-2.7.7.jar:"$REPO"/org/antlr/stringtemplate/4.0.2/stringtemplate-4.0.2.jar:"$REPO"/org/openprovenance/prov/prov-interop/0.6.1/prov-interop-0.6.1.jar:"$REPO"/org/openprovenance/prov/prov-dot/0.6.1/prov-dot-0.6.1.jar:"$REPO"/commons-io/commons-io/2.0.1/commons-io-2.0.1.jar:"$REPO"/org/openprovenance/prov/prov-json/0.6.1/prov-json-0.6.1.jar:"$REPO"/com/google/code/gson/gson/2.1/gson-2.1.jar:"$REPO"/org/openprovenance/prov/prov-template/0.6.1/prov-template-0.6.1.jar:"$REPO"/org/openprovenance/prov/prov-generator/0.6.1/prov-generator-0.6.1.jar:"$REPO"/commons-cli/commons-cli/1.0/commons-cli-1.0.jar:"$REPO"/commons-logging/commons-logging/1.0/commons-logging-1.0.jar:"$REPO"/org/jboss/resteasy/jaxrs-api/3.0.8.Final/jaxrs-api-3.0.8.Final.jar:"$REPO"/log4j/log4j/1.2.17/log4j-1.2.17.jar:"$REPO"/org/openprovenance/prov/toolbox/0.6.1/toolbox-0.6.1.jar

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

exec "$JAVACMD" $JAVA_OPTS  \
  -classpath "$CLASSPATH" \
  -Dapp.name="provconvert" \
  -Dapp.pid="$$" \
  -Dapp.repo="$REPO" \
  -Dapp.home="$BASEDIR" \
  -Dbasedir="$BASEDIR" \
  org.openprovenance.prov.interop.CommandLineArguments \
  "$@"
